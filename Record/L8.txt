%{
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
extern int yylex();
void yyerror(const char *p) { printf("%s\n", p); exit(1); }
char *concat(const char* s1, const char* s2, const char* s3) {
    int len = strlen(s1) + strlen(s2) + strlen(s3) + 1;
    char *s = malloc(len);
    sprintf(s, "%s%s%s", s1, s2, s3);
    return s;
}
%}
%union {
    char *exp;
};
%token INTEGER IDENTIFIER OPR1 OPR2 NEWLINE EXIT
%left OPR1
%left OPR2
%%
lines: /*empty*/
    | lines exp NEWLINE { printf("%s\n>> ", $<exp>2); }
    ;
exp: exp OPR1 exp { $<exp>$ = concat($<exp>2, $<exp>1, $<exp>3); }
    | exp OPR2 exp { $<exp>$ = concat($<exp>2, $<exp>1, $<exp>3); }
    | '(' exp ')' { $<exp>$ = $<exp>2; }
    | INTEGER { $<exp>$ = strdup(yytext); }
    | IDENTIFIER { $<exp>$ = strdup(yytext); }
    | EXIT { exit(0); }
    ;
%%
int main() {
    printf("Infix to Prefix Converter\n");
    printf(">> ");
    yyparse();
    return 0;
}
int yywrap() {
    return 1;
}